" override more customized colors
highlight StatusLine    ctermfg=LightGreen
highlight ColorColumn   ctermbg=52 guibg=#5f0000

highlight LineNr        ctermfg=248 ctermbg=233   guifg=#a8a8a8 guibg=#121212
highlight SignColumn    ctermfg=248 ctermbg=233   guifg=#a8a8a8 guibg=#121212
highlight VertSplit     ctermfg=246 ctermbg=NONE  guifg=#6d747f guibg=NONE

" gitgutter sign column (see afa4f2dd)
"  guibg=<X> and ctermbg=<Y> should match that of SignColumn
highlight GitGutterAdd    guifg=#009900 guibg=#121212 ctermfg=2 ctermbg=233
highlight GitGutterChange guifg=#bbbb00 guibg=#121212 ctermfg=3 ctermbg=233
highlight GitGutterDelete guifg=#ff2222 guibg=#121212 ctermfg=1 ctermbg=233

" some primitive colors customized on top of xoria256
highlight Normal        ctermfg=255 guifg=white    ctermbg=NONE guibg=NONE
highlight EndOfBuffer   ctermfg=240 guifg=#585858  ctermbg=NONE guibg=NONE
highlight Comment       ctermfg=035 guifg=#38B04A
highlight Constant      ctermfg=204 guifg=#ff5f87
highlight PreProc       ctermfg=219 guifg=#ffafff
highlight SpecialKey    ctermfg=242 guifg=#666666
highlight Folded        ctermbg=60  guibg=#404056

" colors for gui/24bit mode {{
" DiffAdd - inserted lines (dark green)
highlight DiffAdd       guibg=#103a05 guifg=NONE
" DiffDelete - deleted/filler lines (gray 246)
highlight DiffDelete    guibg=#949494
" DiffChange - changed lines (dark red)
highlight DiffChange    guibg=#471515 guifg=NONE
" DiffChange - changed 'text'(brighter red)
highlight DiffText      guibg=#721b1b guifg=NONE
" }}

highlight SpellBad guifg=NONE ctermfg=NONE

" no underline, current cursor line
highlight CursorLine    cterm=none ctermbg=232

" better popup menu colors (instead of dark black)
highlight Pmenu             ctermfg=black guifg=black ctermbg=yellow guibg=#ffec99
highlight PmenuSel          ctermfg=red guifg=red ctermbg=white guibg=white gui=bold


" Disable italic not to break style in tmux
"hi railsUserClass  gui=NONE
"hi railsUserMethod gui=NONE

" no underline, current cursor line
highlight Search        guibg=#0a5265



" Sungmin
set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

"java"
"let g:java_highlight_java_lang_ids = 1
let g:java_highlight_java_io=1
let g:java_highlight_functions="indent"
let g:java_space_errors = 1
let g:java_comment_strings = 1
"let g:java_highlight_functions = 1
"let g:java_mark_braces_in_parens_as_errors = 1
let g:JavaComplete_GradleExecutable = 'gradlew'

" javascript
set foldmethod=syntax
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
let g:deoplete#omni#functions = {}
let g:deoplete#omni#functions.javascript = ['tern#Complete', 'jspc#omni']
let g:deoplete#sources = {}
let g:deoplete#sources['javascript.jsx'] = ['file', 'ultisnips', 'ternjs']
" tern for js
let g:tern#command = ['tern']
let g:tern#arguments = ['--persistent']

noremap <leader>= :vertical resize +5<CR>
noremap <leader>- :vertical resize -5<CR>
map <leader>n :NERDTreeFind<CR>


" Style
"call glaive#Install()
"Glaive codefmt google_java_executable="java -jar /Users/sungmin/Google_Drive/_sync/setting/google-java-format-1.5-all-deps.jar"
"augroup autoformat_settings
"  autocmd FileType bzl AutoFormatBuffer buildifier
"  autocmd FileType c,cpp,proto,javascript AutoFormatBuffer clang-format
"  autocmd FileType dart AutoFormatBuffer dartfmt
"  autocmd FileType go AutoFormatBuffer gofmt
"  autocmd FileType gn AutoFormatBuffer gn
"  autocmd FileType html,css,json AutoFormatBuffer js-beautify
"  autocmd FileType java AutoFormatBuffer google-java-format
"  autocmd FileType python AutoFormatBuffer autopep8
"augroup END

"################################################################################

function! MoveTo()
    call inputsave()
    let pattern = input('move to: ')
    call inputrestore()
    exe "normal! /" . pattern . "\<CR>"
endfunction

function! ReplaceSearch()
    call inputsave()
    let replacement = input('Enter replacement:')
    call inputrestore()
    execute '%s//'.replacement.'/gc'
endfunction
command! -nargs=0 Replace call ReplaceSearch()

" Find file in current directory and edit it.
function! Find(name)
  let l:list=system("find . -name '".a:name."' | perl -ne 'print \"$.\\t$_\"'")
" replace above line with below one for gvim on windows
" let l:list=system("find . -name ".a:name." | perl -ne \"print qq{$.\\t$_}\"")
  let l:num=strlen(substitute(l:list, "[^\n]", "", "g"))
  if l:num < 1
    echo "'".a:name."' not found"
    return
  endif
  if l:num != 1
    echo l:list
    let l:input=input("Which ? (CR=nothing)\n")
    if strlen(l:input)==0
      return
    endif
    if strlen(substitute(l:input, "[0-9]", "", "g"))>0
      echo "Not a number"
      return
    endif
    if l:input<1 || l:input>l:num
      echo "Out of range"
      return
    endif
    let l:line=matchstr("\n".l:list, "\n".l:input."\t[^\n]*")
  else
    let l:line=l:list
  endif
  let l:line=substitute(l:line, "^[^\t]*\t./", "", "")
  execute ":e ".l:line
endfunction
command! -nargs=1 Find :call Find("<args>")

let g:email = "smoh2044@gmail.com"


let g:vista_default_executive = 'coc'


let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '```':'```', '"""':'"""', "'''":"'''", "`":"`", "f'": "'", 'f"': '"'}

"autocmd FileType which_key highlight WhichKey ctermbg=12 ctermfg=7
"autocmd FileType which_key highlight WhichKeySeperator ctermbg=12 ctermfg=7
"autocmd FileType which_key highlight WhichKeyGroup cterm=bold ctermbg=12 ctermfg=7
"autocmd FileType which_key highlight WhichKeyDesc ctermbg=12 ctermfg=7
autocmd FileType which_key highlight WhichKeyFloating ctermbg=24 guibg=#002030
